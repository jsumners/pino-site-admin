- name: create site users groups
  group:
    name: "{{item.name}}"
    gid: "{{item.gid}}"
  with_items: "{{site_users}}"

- name: create site users
  user:
    name: "{{item.name}}"
    uid: "{{item.uid}}"
    group: "{{item.name}}"
  with_items: "{{site_users}}"

- name: check for site users passwords
  stat:
    path: "/home/{{item.name}}/.passwd"
  register: users_password_file
  with_items: "{{site_users}}"

- debug:
    var: users_password_file
    verbosity: 2

- name: create password files for site users
  shell: "tr -dc A-Za-z0-9_ < /dev/urandom | head -c 16 | xargs > /home/{{item.0.name}}/.passwd"
  when: item.1.stat.exists == false
  with_together:
    - "{{site_users}}"
    - "{{users_password_file.results}}"

- name: ensure site users password files permissions
  file:
    path: "/home/{{item.name}}/.passwd"
    owner: "{{item.name}}"
    group: "{{item.name}}"
    mode: 0440
  with_items: "{{site_users}}"

- name: get password
  shell: "cat /home/{{item.name}}/.passwd"
  register: site_users_passwords
  with_items: "{{site_users}}"

- debug:
    var: site_users_passwords
    verbosity: 2

- name: set site users passwords
  shell: "echo '{{item.0.name}}:{{item.1.stdout}}' | chpasswd"
  with_together:
    - "{{site_users}}"
    - "{{site_users_passwords.results}}"

- name: set site users home permissions
  file:
    state: directory
    path: "/home/{{item.name}}"
    mode: 'g+rx'
  with_items: "{{site_users}}"

- name: create site users webroots
  file:
    state: directory
    path: "/opt/webroot/{{item.webroot}}"
    owner: "{{item.name}}"
    group: "{{item.name}}"
    mode: 0755
  with_items: "{{site_users}}"

# The next four tasks for chroots and webroot mounts allow us
# to chroot website users when they sftp to the server while still giving
# them the access they need to update their sites. Further, it still allows
# the webserver to read their websites.
- name: create sftp chroot parent
  file:
    state: directory
    path: /opt/chroot

- name: create chroot directories
  file:
    state: directory
    path: "/opt/chroot/{{item.name}}"
    mode: 0750
  with_items: "{{site_users}}"

- name: create webroot mount points
  file:
    state: directory
    path: "/opt/chroot/{{item.name}}/{{item.webroot}}"
    owner: "{{item.name}}"
    group: "{{item.name}}"
  with_items: "{{site_users}}"

- name: create webroot mounts
  mount:
    src: "/opt/webroot/{{item.webroot}}"
    name: "/opt/chroot/{{item.name}}/{{item.webroot}}"
    fstype: none
    opts: auto,bind
    state: mounted
  with_items: "{{site_users}}"
